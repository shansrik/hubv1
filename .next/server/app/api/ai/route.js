"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/ai/route";
exports.ids = ["app/api/ai/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai%2Froute&page=%2Fapi%2Fai%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Froute.ts&appDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai%2Froute&page=%2Fapi%2Fai%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Froute.ts&appDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_shansrikanthan_Documents_GitHub_hubv1_app_api_ai_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/ai/route.ts */ \"(rsc)/./app/api/ai/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/ai/route\",\n        pathname: \"/api/ai\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai/route\"\n    },\n    resolvedPagePath: \"/Users/shansrikanthan/Documents/GitHub/hubv1/app/api/ai/route.ts\",\n    nextConfigOutput,\n    userland: _Users_shansrikanthan_Documents_GitHub_hubv1_app_api_ai_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/ai/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhaSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYWklMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhaSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNoYW5zcmlrYW50aGFuJTJGRG9jdW1lbnRzJTJGR2l0SHViJTJGaHVidjElMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGc2hhbnNyaWthbnRoYW4lMkZEb2N1bWVudHMlMkZHaXRIdWIlMkZodWJ2MSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDZ0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9odWJ2MS8/YzY0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc2hhbnNyaWthbnRoYW4vRG9jdW1lbnRzL0dpdEh1Yi9odWJ2MS9hcHAvYXBpL2FpL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9haS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FpXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9haS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zaGFuc3Jpa2FudGhhbi9Eb2N1bWVudHMvR2l0SHViL2h1YnYxL2FwcC9hcGkvYWkvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2FpL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai%2Froute&page=%2Fapi%2Fai%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Froute.ts&appDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/ai/route.ts":
/*!*****************************!*\
  !*** ./app/api/ai/route.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_ai_openai_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/ai/openai-service */ \"(rsc)/./services/ai/openai-service.ts\");\n\n\nasync function POST(request) {\n    try {\n        const { systemPrompt, userPrompt, includePhoto = false, photoData = null } = await request.json();\n        // Log request details (without sensitive data)\n        console.log(\"AI API Request:\", {\n            includePhoto,\n            photoDataLength: photoData ? `${typeof photoData === \"string\" ? photoData.length : \"not a string\"}` : \"null\"\n        });\n        // Check for API key\n        const API_KEY = process.env.OPENAI_API_KEY;\n        if (!API_KEY) {\n            console.log(\"No OpenAI API key found - returning error\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"OpenAI API key not configured\"\n            }, {\n                status: 400\n            });\n        }\n        let content;\n        // Call the appropriate service based on whether image is included\n        if (includePhoto && photoData) {\n            console.log(\"Processing request with image...\");\n            content = await (0,_services_ai_openai_service__WEBPACK_IMPORTED_MODULE_1__.callOpenAIVisionAPI)(systemPrompt, userPrompt, photoData);\n        } else {\n            console.log(\"Processing text-only request...\");\n            content = await (0,_services_ai_openai_service__WEBPACK_IMPORTED_MODULE_1__.callOpenAIAPI)(systemPrompt, userPrompt);\n        }\n        console.log(\"AI response received successfully\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            content\n        });\n    } catch (error) {\n        console.error(\"Error in AI API route:\", error);\n        // Return appropriate error message\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: `AI API error: ${errorMessage}`\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FpL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDtBQUMwQjtBQUUzRSxlQUFlRyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTSxFQUNKQyxZQUFZLEVBQ1pDLFVBQVUsRUFDVkMsZUFBZSxLQUFLLEVBQ3BCQyxZQUFZLElBQUksRUFDakIsR0FBRyxNQUFNSixRQUFRSyxJQUFJO1FBRXRCLCtDQUErQztRQUMvQ0MsUUFBUUMsR0FBRyxDQUFDLG1CQUFtQjtZQUM3Qko7WUFDQUssaUJBQWlCSixZQUFZLENBQUMsRUFBRSxPQUFPQSxjQUFjLFdBQVdBLFVBQVVLLE1BQU0sR0FBRyxlQUFlLENBQUMsR0FBRztRQUN4RztRQUVBLG9CQUFvQjtRQUNwQixNQUFNQyxVQUFVQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7UUFDMUMsSUFBSSxDQUFDSCxTQUFTO1lBQ1pKLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU9YLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO2dCQUFFUyxPQUFPO1lBQWdDLEdBQ3pDO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxJQUFJQztRQUVKLGtFQUFrRTtRQUNsRSxJQUFJYixnQkFBZ0JDLFdBQVc7WUFDN0JFLFFBQVFDLEdBQUcsQ0FBQztZQUNaUyxVQUFVLE1BQU1sQixnRkFBbUJBLENBQUNHLGNBQWNDLFlBQVlFO1FBQ2hFLE9BQU87WUFDTEUsUUFBUUMsR0FBRyxDQUFDO1lBQ1pTLFVBQVUsTUFBTW5CLDBFQUFhQSxDQUFDSSxjQUFjQztRQUM5QztRQUVBSSxRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPWCxxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQUVXO1FBQVE7SUFFckMsRUFBRSxPQUFPRixPQUFPO1FBQ2RSLFFBQVFRLEtBQUssQ0FBQywwQkFBMEJBO1FBRXhDLG1DQUFtQztRQUNuQyxNQUFNRyxlQUFlSCxpQkFBaUJJLFFBQVFKLE1BQU1LLE9BQU8sR0FBRztRQUU5RCxPQUFPdkIscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRVMsT0FBTyxDQUFDLGNBQWMsRUFBRUcsYUFBYSxDQUFDO1FBQUMsR0FDekM7WUFBRUYsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9odWJ2MS8uL2FwcC9hcGkvYWkvcm91dGUudHM/MGIyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgY2FsbE9wZW5BSUFQSSwgY2FsbE9wZW5BSVZpc2lvbkFQSSB9IGZyb20gJ0Avc2VydmljZXMvYWkvb3BlbmFpLXNlcnZpY2UnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgXG4gICAgICBzeXN0ZW1Qcm9tcHQsIFxuICAgICAgdXNlclByb21wdCwgXG4gICAgICBpbmNsdWRlUGhvdG8gPSBmYWxzZSwgXG4gICAgICBwaG90b0RhdGEgPSBudWxsXG4gICAgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIFxuICAgIC8vIExvZyByZXF1ZXN0IGRldGFpbHMgKHdpdGhvdXQgc2Vuc2l0aXZlIGRhdGEpXG4gICAgY29uc29sZS5sb2coXCJBSSBBUEkgUmVxdWVzdDpcIiwge1xuICAgICAgaW5jbHVkZVBob3RvLFxuICAgICAgcGhvdG9EYXRhTGVuZ3RoOiBwaG90b0RhdGEgPyBgJHt0eXBlb2YgcGhvdG9EYXRhID09PSAnc3RyaW5nJyA/IHBob3RvRGF0YS5sZW5ndGggOiAnbm90IGEgc3RyaW5nJ31gIDogJ251bGwnLFxuICAgIH0pO1xuICAgIFxuICAgIC8vIENoZWNrIGZvciBBUEkga2V5XG4gICAgY29uc3QgQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZO1xuICAgIGlmICghQVBJX0tFWSkge1xuICAgICAgY29uc29sZS5sb2coXCJObyBPcGVuQUkgQVBJIGtleSBmb3VuZCAtIHJldHVybmluZyBlcnJvclwiKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ09wZW5BSSBBUEkga2V5IG5vdCBjb25maWd1cmVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuICAgIFxuICAgIGxldCBjb250ZW50O1xuICAgIFxuICAgIC8vIENhbGwgdGhlIGFwcHJvcHJpYXRlIHNlcnZpY2UgYmFzZWQgb24gd2hldGhlciBpbWFnZSBpcyBpbmNsdWRlZFxuICAgIGlmIChpbmNsdWRlUGhvdG8gJiYgcGhvdG9EYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlByb2Nlc3NpbmcgcmVxdWVzdCB3aXRoIGltYWdlLi4uXCIpO1xuICAgICAgY29udGVudCA9IGF3YWl0IGNhbGxPcGVuQUlWaXNpb25BUEkoc3lzdGVtUHJvbXB0LCB1c2VyUHJvbXB0LCBwaG90b0RhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlByb2Nlc3NpbmcgdGV4dC1vbmx5IHJlcXVlc3QuLi5cIik7XG4gICAgICBjb250ZW50ID0gYXdhaXQgY2FsbE9wZW5BSUFQSShzeXN0ZW1Qcm9tcHQsIHVzZXJQcm9tcHQpO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhcIkFJIHJlc3BvbnNlIHJlY2VpdmVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBjb250ZW50IH0pO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIEFJIEFQSSByb3V0ZTonLCBlcnJvcik7XG4gICAgXG4gICAgLy8gUmV0dXJuIGFwcHJvcHJpYXRlIGVycm9yIG1lc3NhZ2VcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJztcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBgQUkgQVBJIGVycm9yOiAke2Vycm9yTWVzc2FnZX1gIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImNhbGxPcGVuQUlBUEkiLCJjYWxsT3BlbkFJVmlzaW9uQVBJIiwiUE9TVCIsInJlcXVlc3QiLCJzeXN0ZW1Qcm9tcHQiLCJ1c2VyUHJvbXB0IiwiaW5jbHVkZVBob3RvIiwicGhvdG9EYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJwaG90b0RhdGFMZW5ndGgiLCJsZW5ndGgiLCJBUElfS0VZIiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwiZXJyb3IiLCJzdGF0dXMiLCJjb250ZW50IiwiZXJyb3JNZXNzYWdlIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/ai/route.ts\n");

/***/ }),

/***/ "(rsc)/./services/ai/openai-service.ts":
/*!***************************************!*\
  !*** ./services/ai/openai-service.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callOpenAIAPI: () => (/* binding */ callOpenAIAPI),\n/* harmony export */   callOpenAIVisionAPI: () => (/* binding */ callOpenAIVisionAPI),\n/* harmony export */   createReferenceContext: () => (/* binding */ createReferenceContext),\n/* harmony export */   processImageForOpenAI: () => (/* binding */ processImageForOpenAI)\n/* harmony export */ });\n/**\n * OpenAI Service for interacting with the OpenAI API\n */ // OpenAI API Types\n// OpenAI API configuration\nconst OPENAI_API_URL = \"https://api.openai.com/v1/chat/completions\";\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY;\n/**\n * Calls the OpenAI API with the given prompts\n * @param systemPrompt The system prompt to guide OpenAI's behavior\n * @param userPrompt The user's specific request\n * @returns The AI-generated text response\n */ const callOpenAIAPI = async (systemPrompt, userPrompt)=>{\n    try {\n        if (!OPENAI_API_KEY) {\n            throw new Error(\"OpenAI API key not configured\");\n        }\n        const requestBody = {\n            model: \"gpt-4-turbo\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: userPrompt\n                }\n            ],\n            max_tokens: 1000,\n            temperature: 0.7\n        };\n        const response = await fetch(OPENAI_API_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${OPENAI_API_KEY}`\n            },\n            body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`OpenAI API error: ${response.status} ${errorText}`);\n        }\n        const data = await response.json();\n        return data.choices[0]?.message?.content || \"\";\n    } catch (error) {\n        console.error(\"Error calling OpenAI API:\", error);\n        throw error;\n    }\n};\n/**\n * Processes an image for OpenAI's Vision API\n * @param photoData The image data as a base64 string or data URL\n * @returns Formatted image content object for the API request\n */ const processImageForOpenAI = (photoData)=>{\n    if (!photoData) return null;\n    try {\n        let base64Data;\n        // Handle data URL vs raw base64\n        if (photoData.startsWith(\"data:image\")) {\n            const matches = photoData.match(/^data:image\\/([a-zA-Z]+);base64,(.+)$/);\n            if (matches && matches.length >= 3) {\n                base64Data = matches[2].trim();\n            } else {\n                throw new Error(\"Invalid data URL format\");\n            }\n        } else {\n            // It's raw base64, use it directly\n            base64Data = photoData.trim().replace(/\\s/g, \"\");\n        }\n        // Validate base64 data\n        if (!base64Data || base64Data.length === 0) {\n            throw new Error(\"Empty base64 data\");\n        }\n        // Return the formatted image content\n        return {\n            type: \"image_url\",\n            image_url: {\n                url: `data:image/jpeg;base64,${base64Data}`,\n                detail: \"low\" // Using 'low' detail for better performance\n            }\n        };\n    } catch (error) {\n        console.error(\"Error processing image for OpenAI:\", error);\n        return null;\n    }\n};\n/**\n * Sends a multimodal request to OpenAI with text and image\n * @param systemPrompt The system prompt to guide OpenAI's behavior\n * @param userPrompt The user's specific request\n * @param photoData The image data as a base64 string or data URL\n * @returns The AI-generated text response\n */ const callOpenAIVisionAPI = async (systemPrompt, userPrompt, photoData)=>{\n    try {\n        if (!OPENAI_API_KEY) {\n            throw new Error(\"OpenAI API key not configured\");\n        }\n        // Process the image\n        const imageContent = processImageForOpenAI(photoData);\n        if (!imageContent) {\n            throw new Error(\"Failed to process image data\");\n        }\n        // Create the request body with image\n        const requestBody = {\n            model: \"gpt-4o\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: [\n                        {\n                            type: \"text\",\n                            text: userPrompt\n                        },\n                        imageContent\n                    ]\n                }\n            ],\n            max_tokens: 1000,\n            temperature: 0.7\n        };\n        // Make the API request\n        const response = await fetch(OPENAI_API_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${OPENAI_API_KEY}`\n            },\n            body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(`OpenAI Vision API error: ${response.status} ${errorText}`);\n        }\n        const data = await response.json();\n        return data.choices[0]?.message?.content || \"\";\n    } catch (error) {\n        console.error(\"Error calling OpenAI Vision API:\", error);\n        throw error;\n    }\n};\n// Reference materials utilities\n/**\n * Creates a formatted reference context from materials\n * @param materials Object containing various reference materials\n * @returns Formatted reference context string\n */ const createReferenceContext = (materials)=>{\n    let context = \"REFERENCE MATERIALS AND GUIDELINES\\n\\n\";\n    if (materials.terminology) {\n        context += \"TERMINOLOGY:\\n\";\n        for (const [term, definition] of Object.entries(materials.terminology)){\n            context += `- ${term}: ${definition}\\n`;\n        }\n        context += \"\\n\";\n    }\n    if (materials.styleGuide) {\n        context += `STYLE GUIDELINES:\\n${materials.styleGuide}\\n\\n`;\n    }\n    if (materials.namingConventions) {\n        context += `NAMING CONVENTIONS:\\n${materials.namingConventions}\\n\\n`;\n    }\n    if (materials.toneGuidelines) {\n        context += `TONE GUIDELINES:\\n${materials.toneGuidelines}\\n\\n`;\n    }\n    if (materials.examples) {\n        context += \"EXAMPLES:\\n\";\n        for (const [exampleType, example] of Object.entries(materials.examples)){\n            context += `### ${exampleType} Example:\\n${example}\\n\\n`;\n        }\n    }\n    if (materials.legalText) {\n        context += `REQUIRED LEGAL TEXT:\\n${materials.legalText}\\n\\n`;\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./services/ai/openai-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fai%2Froute&page=%2Fapi%2Fai%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fai%2Froute.ts&appDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshansrikanthan%2FDocuments%2FGitHub%2Fhubv1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();